version: "3"
services:
  hospital-agent:
    build:
      context: ../
      dockerfile: dockerfiles/agents/Dockerfile
    environment:
      - ADMIN_URL=http://hospital-agent:${HOSPITAL_ADMIN_PORT}
      - AGENT_NAME=${HOSPITAL_AGENT_NAME}
      - ADMIN_PORT=${HOSPITAL_ADMIN_PORT}
      - HTTP_PORT=${HOSPITAL_HTTP_PORT}
      - ACAPY_WEBHOOK_URL=${HOSPITAL_WEBHOOK_URL}
      - AGENT_ENDPOINT=${HOSPITAL_AGENT_ENDPOINT}
      - WALLET_SEED=${HOSPITAL_WALLET_SEED}
      - WALLET_NAME=${HOSPITAL_WALLET_NAME}
      - WALLET_KEY=${HOSPITAL_WALLET_KEY}
      - WALLET_TYPE=${WALLET_TYPE}
      - ACAPY_TAILS_SERVER_BASE_URL=http://tails-server:6543
      - ACAPY_ADMIN_INSECURE_MODE=${HOSPITAL_ADMIN_SECURE}
      - GENESIS_URL=${GENESIS_URL}
    ports:
      - ${HOSPITAL_HTTP_PORT}:${HOSPITAL_HTTP_PORT}
      - ${HOSPITAL_ADMIN_PORT}:${HOSPITAL_ADMIN_PORT}
    depends_on:
      - ledger-nodes
      - tails-server
    networks:
      - medical_device_blockchain
    entrypoint: /bin/bash
    command: [
        "-c",
        "echo Waiting for ledger to be ready...;
        sleep 60;
        curl -d '{\"seed\":\"${HOSPITAL_WALLET_SEED}\", \"role\":\"TRUST_ANCHOR\", \"alias\":\"${HOSPITAL_AGENT_NAME}\"}' -X POST ${LEDGER_URL}/register; \
        python3 scripts/parse_yml_env_variables.py -c ./configuration/aries-args-basic.yaml; \
        sleep 20; \
        aca-py start --arg-file /tmp/agent_conf.yml",
      ]

  manufacturer-agent:
    build:
      context: ../
      dockerfile: dockerfiles/agents/Dockerfile
    environment:
      - ADMIN_URL=http://manufacturer-agent:${MANUFACTURER_ADMIN_PORT}
      - AGENT_NAME=${MANUFACTURER_AGENT_NAME}
      - ADMIN_PORT=${MANUFACTURER_ADMIN_PORT}
      - HTTP_PORT=${MANUFACTURER_HTTP_PORT}
      - ACAPY_WEBHOOK_URL=${MANUFACTURER_WEBHOOK_URL}
      - AGENT_ENDPOINT=${MANUFACTURER_AGENT_ENDPOINT}
      - WALLET_SEED=${MANUFACTURER_WALLET_SEED}
      - WALLET_NAME=${MANUFACTURER_WALLET_NAME}
      - WALLET_KEY=${MANUFACTURER_WALLET_KEY}
      - WALLET_TYPE=${WALLET_TYPE}
      - ACAPY_ADMIN_INSECURE_MODE=${MANUFACTURER_ADMIN_SECURE}
      - ACAPY_TAILS_SERVER_BASE_URL=http://tails-server:6543
      - GENESIS_URL=${GENESIS_URL}
    ports:
      - ${MANUFACTURER_HTTP_PORT}:${MANUFACTURER_HTTP_PORT}
      - ${MANUFACTURER_ADMIN_PORT}:${MANUFACTURER_ADMIN_PORT}
    depends_on:
      - ledger-nodes
      - tails-server
    networks:
      - medical_device_blockchain
    entrypoint: /bin/bash
    command: [
        "-c",
        "echo Waiting for ledger to be ready...;
        sleep 60;
        curl -d '{\"seed\":\"${MANUFACTURER_WALLET_SEED}\", \"role\":\"TRUST_ANCHOR\", \"alias\":\"${MANUFACTURER_AGENT_NAME}\"}' -X POST ${LEDGER_URL}/register; \
        python3 scripts/parse_yml_env_variables.py -c ./configuration/aries-args-basic.yaml; \
        sleep 20; \
        aca-py start --arg-file /tmp/agent_conf.yml",
      ]
  seller-agent:
    build:
      context: ../
      dockerfile: dockerfiles/agents/Dockerfile
    environment:
      - ADMIN_URL=http://seller-agent:${SELLER_ADMIN_PORT}
      - AGENT_NAME=${SELLER_AGENT_NAME}
      - ADMIN_PORT=${SELLER_ADMIN_PORT}
      - HTTP_PORT=${SELLER_HTTP_PORT}
      - ACAPY_WEBHOOK_URL=${SELLER_WEBHOOK_URL}
      - AGENT_ENDPOINT=${SELLER_AGENT_ENDPOINT}
      - WALLET_SEED=${SELLER_WALLET_SEED}
      - WALLET_NAME=${SELLER_WALLET_NAME}
      - WALLET_KEY=${SELLER_WALLET_KEY}
      - WALLET_TYPE=${WALLET_TYPE}
      - ACAPY_ADMIN_INSECURE_MODE=${SELLER_ADMIN_SECURE}
      - ACAPY_TAILS_SERVER_BASE_URL=http://tails-server:6543
      - GENESIS_URL=${GENESIS_URL}
    ports:
      - ${SELLER_HTTP_PORT}:${SELLER_HTTP_PORT}
      - ${SELLER_ADMIN_PORT}:${SELLER_ADMIN_PORT}
    depends_on:
      - ledger-nodes
      - tails-server
    networks:
      - medical_device_blockchain
    entrypoint: /bin/bash
    command: [
        "-c",
        "echo Waiting for ledger to be ready...;
        sleep 60;
        curl -d '{\"seed\":\"${SELLER_WALLET_SEED}\", \"role\":\"TRUST_ANCHOR\", \"alias\":\"${SELLER_AGENT_NAME}\"}' -X POST ${LEDGER_URL}/register; \
        python3 scripts/parse_yml_env_variables.py -c ./configuration/aries-args-basic.yaml; \
        sleep 20; \
        aca-py start --arg-file /tmp/agent_conf.yml",
      ]
  medical_device_computer-agent:
    build:
      context: ../
      dockerfile: dockerfiles/agents/Dockerfile
    environment:
      - ADMIN_URL=http://medical_device_computer-agent:${MEDICAL_DEVICE_COMPUTER_ADMIN_PORT}
      - AGENT_NAME=${MEDICAL_DEVICE_COMPUTER_AGENT_NAME}
      - ADMIN_PORT=${MEDICAL_DEVICE_COMPUTER_ADMIN_PORT}
      - HTTP_PORT=${MEDICAL_DEVICE_COMPUTER_HTTP_PORT}
      - ACAPY_WEBHOOK_URL=${MEDICAL_DEVICE_COMPUTER_WEBHOOK_URL}
      - AGENT_ENDPOINT=${MEDICAL_DEVICE_COMPUTER_AGENT_ENDPOINT}
      - WALLET_SEED=${MEDICAL_DEVICE_COMPUTER_WALLET_SEED}
      - WALLET_NAME=${MEDICAL_DEVICE_COMPUTER_WALLET_NAME}
      - WALLET_KEY=${MEDICAL_DEVICE_COMPUTER_WALLET_KEY}
      - WALLET_TYPE=${WALLET_TYPE}
      - ACAPY_ADMIN_INSECURE_MODE=${MEDICAL_DEVICE_COMPUTER_ADMIN_SECURE}
      - ACAPY_TAILS_SERVER_BASE_URL=http://tails-server:6543
      - GENESIS_URL=${GENESIS_URL}
    ports:
      - ${MEDICAL_DEVICE_COMPUTER_HTTP_PORT}:${MEDICAL_DEVICE_COMPUTER_HTTP_PORT}
      - ${MEDICAL_DEVICE_COMPUTER_ADMIN_PORT}:${MEDICAL_DEVICE_COMPUTER_ADMIN_PORT}
    depends_on:
      - ledger-nodes
      - tails-server
    networks:
      - medical_device_blockchain
    entrypoint: /bin/bash
    command: [
        "-c",
        "echo Waiting for ledger to be ready...;
        sleep 60;
        curl -d '{\"seed\":\"${MEDICAL_DEVICE_COMPUTER_WALLET_SEED}\", \"role\":\"TRUST_ANCHOR\", \"alias\":\"${MEDICAL_DEVICE_COMPUTER_AGENT_NAME}\"}' -X POST ${LEDGER_URL}/register; \
        python3 scripts/parse_yml_env_variables.py -c ./configuration/aries-args-basic.yaml; \
        sleep 20; \
        aca-py start --arg-file /tmp/agent_conf.yml",
      ]
  the_wallet-agent:
    build:
      context: ../
      dockerfile: dockerfiles/agents/Dockerfile
    environment:
      - ADMIN_URL=http://the_wallet-agent:${THE_WALLET_ADMIN_PORT}
      - AGENT_NAME=${THE_WALLET_AGENT_NAME}
      - ADMIN_PORT=${THE_WALLET_ADMIN_PORT}
      - HTTP_PORT=${THE_WALLET_HTTP_PORT}
      - ACAPY_WEBHOOK_URL=${THE_WALLET_WEBHOOK_URL}
      - AGENT_ENDPOINT=${THE_WALLET_AGENT_ENDPOINT}
      - WALLET_SEED=${THE_WALLET_WALLET_SEED}
      - WALLET_NAME=${THE_WALLET_WALLET_NAME}
      - WALLET_KEY=${THE_WALLET_WALLET_KEY}
      - WALLET_TYPE=${WALLET_TYPE}
      - ACAPY_ADMIN_INSECURE_MODE=${THE_WALLET_ADMIN_SECURE}
      - ACAPY_TAILS_SERVER_BASE_URL=http://tails-server:6543
      - GENESIS_URL=${GENESIS_URL}
    ports:
      - ${THE_WALLET_HTTP_PORT}:${THE_WALLET_HTTP_PORT}
      - ${THE_WALLET_ADMIN_PORT}:${THE_WALLET_ADMIN_PORT}
    depends_on:
      - ledger-nodes
      - tails-server
    networks:
      - medical_device_blockchain
    entrypoint: /bin/bash
    command: [
        "-c",
        "echo Waiting for ledger to be ready...;
        sleep 60;
        curl -d '{\"seed\":\"${THE_WALLET_WALLET_SEED}\", \"role\":\"TRUST_ANCHOR\", \"alias\":\"${THE_WALLET_AGENT_NAME}\"}' -X POST ${LEDGER_URL}/register; \
        python3 scripts/parse_yml_env_variables.py -c ./configuration/aries-args-basic.yaml; \
        sleep 20; \
        aca-py start --arg-file /tmp/agent_conf.yml",
      ]
  setup:
    build:
      context: ../
      dockerfile: dockerfiles/agents/Dockerfile.createconnection
    networks:
      - medical_device_blockchain
    depends_on:
      - hospital-agent
      - manufacturer-agent
      - seller-agent
      - medical_device_computer-agent
      - the_wallet-agent
#    ports:
#      - ${ALICE_WEBHOOK_PORT}:${ALICE_WEBHOOK_PORT}
#      - ${BOB_WEBHOOK_PORT}:${BOB_WEBHOOK_PORT}
    environment:
      - HOSPITAL_ADMIN_URL=http://hospital-agent:${HOSPITAL_ADMIN_PORT}
      - HOSPITAL_WEBHOOK_PORT=${HOSPITAL_WEBHOOK_PORT}
      - HOSPITAL_WEBHOOK_HOST=0.0.0.0
      - MANUFACTURER_ADMIN_URL=http://manufacturer-agent:${MANUFACTURER_ADMIN_PORT}
      - MANUFACTURER_WEBHOOK_PORT=${MANUFACTURER_WEBHOOK_PORT}
      - MANUFACTURER_WEBHOOK_HOST=0.0.0.0
      - SELLER_ADMIN_URL=http://seller-agent:${SELLER_ADMIN_PORT}
      - SELLER_WEBHOOK_PORT=${SELLER_WEBHOOK_PORT}
      - SELLER_WEBHOOK_HOST=0.0.0.0
      - MEDICAL_DEVICE_COMPUTER_ADMIN_URL=http://medical_device_computer-agent:${MEDICAL_DEVICE_COMPUTER_ADMIN_PORT}
      - MEDICAL_DEVICE_COMPUTER_WEBHOOK_PORT=${MEDICAL_DEVICE_COMPUTER_WEBHOOK_PORT}
      - MEDICAL_DEVICE_COMPUTER_WEBHOOK_HOST=0.0.0.0
      - THE_WALLET_ADMIN_URL=http://the_wallet-agent:${THE_WALLET_ADMIN_PORT}
      - THE_WALLET_WEBHOOK_PORT=${THE_WALLET_WEBHOOK_PORT}
      - THE_WALLET_WEBHOOK_HOST=0.0.0.0
    entrypoint: /bin/bash
    command:
      [
        "-c",
        "sleep 80;
        python ./create_connection.py"
      ]
  hospital-notebook:
    build:
      context: ../
      dockerfile: dockerfiles/controllers/Dockerfile.basiccontroller
      args:
        - jupyter_port=${HOSPITAL_JUPYTER_PORT}
    depends_on:
      - hospital-agent
    networks:
      - medical_device_blockchain
    volumes:
      - ./notebooks/hospital:/workspace
    ports:
      - "8889:8888"
      - ${HOSPITAL_WEBHOOK_PORT}:${HOSPITAL_WEBHOOK_PORT}
  manufacturer-notebook:
    build:
      context: ../
      dockerfile: dockerfiles/controllers/Dockerfile.basiccontroller
      args:
        - jupyter_port=${MANUFACTURER_JUPYTER_PORT}
    depends_on:
      - manufacturer-agent
    networks:
      - medical_device_blockchain
    volumes:
      - ${PWD}/notebooks/manufacturer:/workspace
    ports:
      - "8888:8888"
      - ${MANUFACTURER_WEBHOOK_PORT}:${MANUFACTURER_WEBHOOK_PORT}
  seller-notebook:
    build:
      context: ../
      dockerfile: dockerfiles/controllers/Dockerfile.basiccontroller
      args:
        - jupyter_port=${SELLER_JUPYTER_PORT}
    depends_on:
      - seller-agent
    networks:
      - medical_device_blockchain
    volumes:
      - ${PWD}/notebooks/seller:/workspace
    ports:
      - "8890:8888"
      - ${SELLER_WEBHOOK_PORT}:${SELLER_WEBHOOK_PORT}
  medical_device_computer-notebook:
    build:
      context: ../
      dockerfile: dockerfiles/controllers/Dockerfile.basiccontroller
      args:
        - jupyter_port=${MEDICAL_DEVICE_COMPUTER_JUPYTER_PORT}
    depends_on:
      - medical_device_computer-agent
    networks:
      - medical_device_blockchain
    volumes:
      - ${PWD}/notebooks/medical_device_computer:/workspace
    ports:
      - "8891:8888"
      - ${MEDICAL_DEVICE_COMPUTER_WEBHOOK_PORT}:${MEDICAL_DEVICE_COMPUTER_WEBHOOK_PORT}
  the_wallet-notebook: 
    build:
      context: ../
      dockerfile: dockerfiles/controllers/Dockerfile.basiccontroller
      args:
        - jupyter_port=${THE_WALLET_JUPYTER_PORT}
    depends_on:
      - the_wallet-agent
    networks:
      - medical_device_blockchain
    volumes:
      - ${PWD}/notebooks/the_wallet:/workspace
    ports:
      - "8892:8888"
      - ${THE_WALLET_WEBHOOK_PORT}:${THE_WALLET_WEBHOOK_PORT}
  ledger-browser:
    build:
      context: https://github.com/bcgov/von-network.git#main
      dockerfile: Dockerfile
    command: "bash -c 'sleep 10; ./scripts/start_webserver.sh;'"
    environment:
      - DOCKERHOST=${DOCKERHOST}
      - MAX_FETCH=50000
      - RESYNC_TIME=120
      - REGISTER_NEW_DIDS=True
      - LEDGER_INSTANCE_NAME=localhost
    ports:
      - ${WEB_SERVER_HOST_PORT:-9000}:8000
    volumes:
      - webserver-cli:/home/indy/.indy-cli
      - webserver-ledger:/home/indy/ledger
    networks:
      - medical_device_blockchain
  ledger-nodes:
    build:
      context: https://github.com/bcgov/von-network.git#main
      dockerfile: Dockerfile
    command: "bash -c './scripts/start_nodes.sh'"
    ports:
      - 9701:9701
      - 9702:9702
      - 9703:9703
      - 9704:9704
      - 9705:9705
      - 9706:9706
      - 9707:9707
      - 9708:9708
    environment:
      - DOCKERHOST=${DOCKERHOST}
    volumes:
      - nodes-data:/home/indy/ledger
    networks:
      - medical_device_blockchain

  tails-server:
    build:
      context: https://github.com/bcgov/indy-tails-server.git#main
      dockerfile: docker/Dockerfile.tails-server
    ports:
      - 6543:6543
    networks:
      - medical_device_blockchain
    command: >
      tails-server
        --host 0.0.0.0
        --port 6543
        --storage-path $STORAGE_PATH
        --log-level INFO

networks:
  medical_device_blockchain:
volumes:
  webserver-cli:
  webserver-ledger:
  nodes-data: